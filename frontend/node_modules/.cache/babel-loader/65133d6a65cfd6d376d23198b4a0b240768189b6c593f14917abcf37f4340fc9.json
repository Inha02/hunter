{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjo12\\\\Downloads\\\\hunter\\\\frontend\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\n// Home.tsx\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// 컴포넌트 임포트\nimport Header from '../components/Header/Header';\nimport Navigation from '../components/Navigation/Navigation';\nimport SearchTab from '../components/SearchTab/SearchTab';\nimport RadioGroup from '../components/RadioGroup/RadioGroup';\nimport Pagination from '../components/Pagination/Pagination';\nimport BotButton from '../components/BotButton/BotButton';\nimport Footer from '../components/Footer/Footer';\n\n// 추가적으로 필요한 컴포넌트나 스타일이 있을 경우 정의\n// 예: 아이템 목록을 표시할 ItemCard 컴포넌트\n\n// ItemCard 스타일 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemCardWrapper = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.white};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.gray[300]};\n  border-radius: 16px;\n  padding: 16px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\n// ItemCard 컴포넌트\n_c = ItemCardWrapper;\nconst ItemCard = ({\n  item\n}) => {\n  return /*#__PURE__*/_jsxDEV(ItemCardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// Main 컨테이너 스타일\n_c2 = ItemCard;\nconst MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 32px;\n  max-width: 1600px;\n  margin: 0 auto;\n`;\n\n// 아이템 목록 스타일\n_c3 = MainContainer;\nconst ItemList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 24px;\n  width: 100%;\n  margin-top: 32px;\n`;\n\n// Home 컴포넌트\n_c4 = ItemList;\nconst Home = () => {\n  _s();\n  // 상태 관리\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = 5; // 예시 총 페이지 수\n\n  // 더미 데이터 (실제 구현 시 API 호출 등을 통해 데이터를 가져옵니다)\n  const allItems = Array.from({\n    length: 50\n  }, (_, idx) => ({\n    id: idx + 1,\n    title: `Item ${idx + 1}`,\n    description: `This is the description for item ${idx + 1}.`\n  }));\n\n  // 필터링된 아이템\n  const filteredItems = allItems.filter(item => {\n    const matchesSearch = item.title.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesCategory = selectedCategory ? item.title.includes(selectedCategory) : true;\n    return matchesSearch && matchesCategory;\n  });\n\n  // 현재 페이지에 해당하는 아이템\n  const itemsPerPage = 10;\n  const paginatedItems = filteredItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  // BotButton 핸들러\n  const handlePrevious = () => {\n    // 이전 버튼 클릭 시 처리 로직\n    console.log('Previous button clicked');\n  };\n  const handleSubmit = () => {\n    // 제출 버튼 클릭 시 처리 로직\n    console.log('Submit button clicked');\n  };\n\n  // SearchTab에서 검색어 변경 시 호출되는 콜백\n  const handleSearchChange = value => {\n    setSearchQuery(value);\n    setCurrentPage(1); // 검색 시 페이지 초기화\n  };\n\n  // RadioGroup에서 선택 변경 시 호출되는 콜백\n  const handleCategoryChange = selected => {\n    setSelectedCategory(selected);\n    setCurrentPage(1); // 카테고리 변경 시 페이지 초기화\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: true,\n      username: \"\\uD64D\\uAE38\\uB3D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SearchTab, {\n        onSearch: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        options: ['모빌리티', '냉장고', '전자제품', '책/문서', '기프티콘', '원룸', '족보', '기타'],\n        onChange: handleCategoryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n        children: paginatedItems.map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        totalPages: Math.ceil(filteredItems.length / itemsPerPage),\n        currentPage: currentPage,\n        onPageChange: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotButton, {\n        previousLabel: \"\\uC774\\uC804\",\n        submitLabel: \"\\uC81C\\uCD9C\",\n        onPreviousClick: handlePrevious,\n        onSubmitClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Fkm7FwzNmRv7/PvOHPgUioipSJA=\");\n_c5 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ItemCardWrapper\");\n$RefreshReg$(_c2, \"ItemCard\");\n$RefreshReg$(_c3, \"MainContainer\");\n$RefreshReg$(_c4, \"ItemList\");\n$RefreshReg$(_c5, \"Home\");","map":{"version":3,"names":["React","useState","styled","Header","Navigation","SearchTab","RadioGroup","Pagination","BotButton","Footer","jsxDEV","_jsxDEV","ItemCardWrapper","div","theme","colors","white","gray","_c","ItemCard","item","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c2","MainContainer","main","_c3","ItemList","_c4","Home","_s","searchQuery","setSearchQuery","selectedCategory","setSelectedCategory","currentPage","setCurrentPage","totalPages","allItems","Array","from","length","_","idx","id","filteredItems","filter","matchesSearch","toLowerCase","includes","matchesCategory","itemsPerPage","paginatedItems","slice","handlePrevious","console","log","handleSubmit","handleSearchChange","value","handleCategoryChange","selected","isLoggedIn","username","onSearch","options","onChange","map","Math","ceil","onPageChange","previousLabel","submitLabel","onPreviousClick","onSubmitClick","_c5","$RefreshReg$"],"sources":["C:/Users/pjo12/Downloads/hunter/frontend/src/pages/Home.tsx"],"sourcesContent":["// Home.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// 컴포넌트 임포트\r\nimport Header from '../components/Header/Header';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport SearchTab from '../components/SearchTab/SearchTab';\r\nimport RadioGroup from '../components/RadioGroup/RadioGroup';\r\nimport Pagination from '../components/Pagination/Pagination';\r\nimport BotButton from '../components/BotButton/BotButton';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\n// 추가적으로 필요한 컴포넌트나 스타일이 있을 경우 정의\r\n// 예: 아이템 목록을 표시할 ItemCard 컴포넌트\r\n\r\n// ItemCard 스타일 정의\r\nconst ItemCardWrapper = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border: 1px solid ${({ theme }) => theme.colors.gray[300]};\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\n// ItemCard 컴포넌트\r\ninterface Item {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nconst ItemCard: React.FC<{ item: Item }> = ({ item }) => {\r\n  return (\r\n    <ItemCardWrapper>\r\n      <h3>{item.title}</h3>\r\n      <p>{item.description}</p>\r\n    </ItemCardWrapper>\r\n  );\r\n};\r\n\r\n// Main 컨테이너 스타일\r\nconst MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 32px;\r\n  max-width: 1600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\n// 아이템 목록 스타일\r\nconst ItemList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 24px;\r\n  width: 100%;\r\n  margin-top: 32px;\r\n`;\r\n\r\n// Home 컴포넌트\r\nconst Home: React.FC = () => {\r\n  // 상태 관리\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = 5; // 예시 총 페이지 수\r\n\r\n  // 더미 데이터 (실제 구현 시 API 호출 등을 통해 데이터를 가져옵니다)\r\n  const allItems: Item[] = Array.from({ length: 50 }, (_, idx) => ({\r\n    id: idx + 1,\r\n    title: `Item ${idx + 1}`,\r\n    description: `This is the description for item ${idx + 1}.`,\r\n  }));\r\n\r\n  // 필터링된 아이템\r\n  const filteredItems = allItems.filter(item => {\r\n    const matchesSearch = item.title.toLowerCase().includes(searchQuery.toLowerCase());\r\n    const matchesCategory = selectedCategory ? item.title.includes(selectedCategory) : true;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  // 현재 페이지에 해당하는 아이템\r\n  const itemsPerPage = 10;\r\n  const paginatedItems = filteredItems.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  // BotButton 핸들러\r\n  const handlePrevious = () => {\r\n    // 이전 버튼 클릭 시 처리 로직\r\n    console.log('Previous button clicked');\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // 제출 버튼 클릭 시 처리 로직\r\n    console.log('Submit button clicked');\r\n  };\r\n\r\n  // SearchTab에서 검색어 변경 시 호출되는 콜백\r\n  const handleSearchChange = (value: string) => {\r\n    setSearchQuery(value);\r\n    setCurrentPage(1); // 검색 시 페이지 초기화\r\n  };\r\n\r\n  // RadioGroup에서 선택 변경 시 호출되는 콜백\r\n  const handleCategoryChange = (selected: string | null) => {\r\n    setSelectedCategory(selected);\r\n    setCurrentPage(1); // 카테고리 변경 시 페이지 초기화\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 헤더 */}\r\n      <Header isLoggedIn={true} username=\"홍길동\" />\r\n\r\n      {/* 네비게이션 */}\r\n      <Navigation />\r\n\r\n      {/* 메인 콘텐츠 */}\r\n      <MainContainer>\r\n        {/* 검색 탭 */}\r\n        <SearchTab onSearch={handleSearchChange} />\r\n\r\n        {/* 라디오 그룹 (카테고리 필터) */}\r\n        <RadioGroup\r\n          options={['모빌리티', '냉장고', '전자제품', '책/문서', '기프티콘', '원룸', '족보', '기타']}\r\n          onChange={handleCategoryChange}\r\n        />\r\n\r\n        {/* 아이템 목록 */}\r\n        <ItemList>\r\n          {paginatedItems.map(item => (\r\n            <ItemCard key={item.id} item={item} />\r\n          ))}\r\n        </ItemList>\r\n\r\n        {/* 페이징 */}\r\n        <Pagination\r\n          totalPages={Math.ceil(filteredItems.length / itemsPerPage)}\r\n          currentPage={currentPage}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n\r\n        {/* 하단 버튼 */}\r\n        <BotButton\r\n          previousLabel=\"이전\"\r\n          submitLabel=\"제출\"\r\n          onPreviousClick={handlePrevious}\r\n          onSubmitClick={handleSubmit}\r\n        />\r\n      </MainContainer>\r\n\r\n      {/* 푸터 */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}